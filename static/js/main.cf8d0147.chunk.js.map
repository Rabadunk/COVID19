{"version":3,"sources":["components/Title.js","components/AgeChart.js","components/GenderChart.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","labelsArray","AgeChart","props","state","chartData","labels","datasets","label","data","map","count","forEach","element","backgroundColor","this","width","height","options","title","display","text","responsive","maintainAspectRatio","Component","getData","tempData","GenderChart","scales","yAxes","ticks","beginAtZero","Map","mapRef","React","createRef","mapJuice","addBubble","a","location","locations","console","log","JSON","stringify","setState","H","window","defaultLayers","service","Platform","apikey","createDefaultLayers","current","vector","normal","center","lat","lng","zoom","pixelRatio","devicePixelRatio","ui","mapevents","Behavior","MapEvents","UI","createDefault","addMarkerToGroup","group","coordinate","html","marker","Marker","setData","addObject","Group","place","addEventListener","evt","bubble","InfoBubble","target","getGeometry","content","message","addInfoBubble","dispose","ref","style","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"wKAYiBA,MAVjB,WACI,OACE,yBAAKC,UAAU,SACb,6DACA,+FACA,8I,4CCHFC,EAAc,CAAC,QAAS,QAAS,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA4EzEC,E,kDApDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAM,CACPC,UAAW,CACPC,OAAQL,EACRM,SAAU,CAAC,CACPC,MAAO,SACPC,KA5BAR,EAAYS,KAAK,SAACF,GAE9B,IAAIG,EAAQ,EAQZ,OANAF,EAAKG,SAAQ,SAAAC,GACNA,EAAO,MAAYL,IAClBG,GAAS,MAIVA,KAmBOG,gBAAgB,CACd,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,6BAnBD,E,qDA2Bf,OACI,6BACI,kBAAC,IAAD,CACAL,KAAMM,KAAKX,MAAMC,UACjBW,MAAO,IACPC,OAAQ,IACRC,QACI,CACIC,MAAO,CACHC,SAAS,EACTC,KAAM,gCAEVC,YAAW,EACXC,qBAAoB,U,GA1CrBC,aCtBjBvB,EAAc,CAAC,IAAK,IAAK,OAAQ,UAEnCwB,EAAU,WAEV,IAAMC,EAAWzB,EAAYS,KAAK,SAACF,GAE/B,IAAIG,EAAQ,EAQZ,OANAF,EAAKG,SAAQ,SAAAC,GACNA,EAAO,SAAeL,IACrBG,GAAS,MAIVA,KAMX,MAFc,CAACe,EAAS,GAAKA,EAAS,GAAIA,EAAS,GAAKA,EAAS,KA2DtDC,E,kDAnDX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAM,CACPC,UAAW,CACPC,OAAQ,CAAC,SAAU,QACnBC,SAAU,CAAC,CACPC,MAAO,SACPC,KAAMgB,IACJX,gBAAgB,CACd,wBACA,6BAXD,E,qDAmBf,OACI,6BACI,kBAAC,IAAD,CACAL,KAAMM,KAAKX,MAAMC,UACjBW,MAAO,IACPC,OAAQ,IACRC,QACI,CACIC,MAAO,CACHC,SAAS,EACTC,KAAM,6BAEVC,YAAW,EACXC,qBAAoB,EACpBK,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,c,GAtCvBP,a,0CCgFXQ,EAtGf,4MACIC,OAASC,IAAMC,YADnB,EAGI/B,MAAQ,CAENM,IAAK,KACL0B,SAAU,KACVC,UAAW,MAPjB,kEAYQ,IAAID,EAAW,GAGf3B,EAAKG,QAAL,uCAAa,WAAOC,GAAP,SAAAyB,EAAA,sDAENzB,EAAO,YAAgBuB,EACtBA,EAASvB,EAAO,UAAcF,OAAS,EAEvCyB,EAASvB,EAAO,UAAgB,CAACF,MAAO,EAAG4B,SAAUC,EAAU3B,EAAO,WALjE,2CAAb,uDAUA4B,QAAQC,IAAIC,KAAKC,UAAUR,IAE3BrB,KAAK8B,SAAS,CAACT,aAEf,IAAMU,EAAIC,OAAOD,EAKXE,EAJW,IAAIF,EAAEG,QAAQC,SAAS,CACpCC,OAAQ,gDAGmBC,sBAI3B1C,EAAM,IAAIoC,EAAEd,IACZjB,KAAKkB,OAAOoB,QACZL,EAAcM,OAAOC,OAAO7C,IAC5B,CAEI8C,OAAQ,CAAEC,KAAM,GAAIC,IAAK,KACzBC,KAAM,EACNC,WAAYb,OAAOc,kBAAoB,IAMzCC,GAFW,IAAIhB,EAAEiB,UAAUC,SAAS,IAAIlB,EAAEiB,UAAUE,UAAUvD,IAEzDoC,EAAEgB,GAAGI,GAAGC,cAAczD,EAAKsC,IAEtC,SAASoB,EAAiBC,EAAOC,EAAYC,GACzC,IAAIC,EAAS,IAAI1B,EAAEpC,IAAI+D,OAAOH,GAE9BE,EAAOE,QAAQH,GACfF,EAAMM,UAAUH,IAGpB,SAAuB9D,GACnB,IAAI2D,EAAQ,IAAIvB,EAAEpC,IAAIkE,MAgBtB,IAAI,IAAIC,KAdRnE,EAAIiE,UAAUN,GAGdA,EAAMS,iBAAiB,OAAO,SAAUC,GAGpC,IAAIC,EAAU,IAAIlC,EAAEgB,GAAGmB,WAAWF,EAAIG,OAAOC,cAAe,CAE5DC,QAASL,EAAIG,OAAOzD,YAGpBqC,EAAGzB,UAAU2C,MACd,GAEc5C,EAAU,CACvB,IAAIiD,EAAU,aAAeR,EAAQ,sBAAwBzC,EAASyC,GAAT,MAC7DT,EAAiBC,EAAO,CAACZ,IAAKrB,EAASyC,GAAT,aAAoCnB,IAAKtB,EAASyC,GAAT,cAAoCQ,IAKnHC,CAAc5E,GAEdK,KAAK8B,SAAS,CAAEnC,UAtFxB,6CA2FMK,KAAKX,MAAMM,IAAI6E,YA3FrB,+BA+FM,OAEE,yBAAKC,IAAKzE,KAAKkB,OAAQwD,MAAO,CAAExE,OAAQ,eAjGhD,GAAyBiB,IAAMV,W,OCgBhBkE,MAff,WACE,OACE,yBAAK1F,UAAU,OAEb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJY2F,QACW,cAA7B5C,OAAOR,SAASqD,UAEe,UAA7B7C,OAAOR,SAASqD,UAEhB7C,OAAOR,SAASqD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjE,QAAQiE,MAAMA,EAAMrB,a","file":"static/js/main.cf8d0147.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Title() {\n    return (\n      <div className=\"Title\">\n        <h1>COVID-19 Cases In New Zealand</h1>\n        <h2>A better visualisation of the table provided by the government </h2>\n        <a>https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases</a>\n      </div>\n    );\n  }\n  \n  export default Title;","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport data from './data.json'\n\nconst labelsArray = ['Child', 'Teens', '20s', '30s', '40s', '50s', '60s', '70s', '80s', '90s'];\n\nlet getData = () => {\n\n    const newData = labelsArray.map( (label) => {\n\n        let count = 0;\n\n        data.forEach(element => {\n            if(element['Age'] === label) {\n                count += 1\n            }\n        });\n\n        return count;\n\n    })\n\n    return newData;\n\n}\n\nclass AgeChart extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state={\n            chartData: {\n                labels: labelsArray,\n                datasets: [{\n                    label: 'People',\n                    data: getData(),\n                      backgroundColor:[\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)'\n                      ] \n                }]\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Bar\n                data={this.state.chartData}\n                width={100}\n                height={400}\n                options={\n                    {\n                        title: {\n                            display: true,\n                            text: 'No. Of infected by age group'\n                        },\n                        responsive:true, \n                        maintainAspectRatio:false\n                    }\n                }\n                />\n            </div>\n        );\n    }\n\n\n\n}\n\nexport default AgeChart;","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport data from './data.json'\n\nconst labelsArray = ['F', 'M', 'Male', 'Female'];\n\nlet getData = () => {\n\n    const tempData = labelsArray.map( (label) => {\n\n        let count = 0;\n\n        data.forEach(element => {\n            if(element['Gender'] === label) {\n                count += 1\n            }\n        });\n\n        return count;\n\n    })\n\n    let newData = [tempData[0] + tempData[3], tempData[1] + tempData[2]]\n\n    return newData;\n\n}\n\nclass GenderChart extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state={\n            chartData: {\n                labels: ['Female', 'Male'],\n                datasets: [{\n                    label: 'People',\n                    data: getData(),\n                      backgroundColor:[\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(255, 206, 86, 1)',\n                      ] \n                }]\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Bar\n                data={this.state.chartData}\n                width={100}\n                height={400}\n                options={\n                    {\n                        title: {\n                            display: true,\n                            text: 'No. Of infected by gender'\n                        },\n                        responsive:true, \n                        maintainAspectRatio:false,\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    beginAtZero: true\n                                }\n                            }]\n                        }\n                    }\n                }\n                />\n            </div>\n        );\n    }\n\n\n\n}\n\nexport default GenderChart;","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport data from './data.json'\nimport locations from './locations.json'\n\n\nexport class Map extends React.Component {\n    mapRef = React.createRef();\n  \n    state = {\n      // The map instance to use during cleanup\n      map: null,\n      mapJuice: null,\n      addBubble: null\n    };\n  \n    componentDidMount() {\n\n        let mapJuice = {\n        }\n\n        data.forEach(async (element) => {\n        \n            if(element['Location'] in mapJuice) {\n                mapJuice[element['Location']].count += 1;\n            } else {\n                mapJuice[element['Location']] = {count: 1, location: locations[element['Location']]};\n            }\n        \n        });\n        \n        console.log(JSON.stringify(mapJuice));\n\n        this.setState({mapJuice});\n  \n        const H = window.H;\n        const platform = new H.service.Platform({\n            apikey: \"SegffNRDuesYvP2HvoFgxQrMYojyXfMh9Y0EPaJmULQ\"\n        });\n  \n        const defaultLayers = platform.createDefaultLayers();\n        \n\n        // Create an instance of the map\n        let map = new H.Map(\n            this.mapRef.current,\n            defaultLayers.vector.normal.map,\n            {\n                // This map is centered over NZ\n                center: { lat: -41, lng: 535 },\n                zoom: 6,\n                pixelRatio: window.devicePixelRatio || 1\n            }\n        );\n\n        const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n        const ui = H.ui.UI.createDefault(map, defaultLayers);\n\n        function addMarkerToGroup(group, coordinate, html) {\n            var marker = new H.map.Marker(coordinate);\n            // add custom data to the marker\n            marker.setData(html);\n            group.addObject(marker);\n        }\n\n        function addInfoBubble(map) {\n            var group = new H.map.Group();\n            \n            map.addObject(group);\n            \n            // add 'tap' event listener, that opens info bubble, to the group\n            group.addEventListener('tap', function (evt) {\n                // event target is the marker itself, group is a parent event target\n                // for all objects that it contains\n                var bubble =  new H.ui.InfoBubble(evt.target.getGeometry(), {\n                // read custom data\n                content: evt.target.getData()\n                });\n                // show info bubble\n                ui.addBubble(bubble);\n            }, false);\n\n            for(let place in mapJuice) {\n                let message = \"Location: \" + place + \"\\nNumber of cases: \" + mapJuice[place]['count'];\n                addMarkerToGroup(group, {lat: mapJuice[place]['location']['lat'], lng: mapJuice[place]['location']['lng']},message)\n            }\n           \n        }\n\n        addInfoBubble(map);\n  \n        this.setState({ map });\n    }\n  \n    componentWillUnmount() {\n      // Cleanup after the map to avoid memory leaks when this component exits the page\n      this.state.map.dispose();\n    }\n  \n    render() {\n      return (\n        // Set a height on the map so it will display\n        <div ref={this.mapRef} style={{ height: \"400px\"}} />\n      );\n    }\n  }\n\nexport default Map;","import React from 'react';\nimport Title from './components/Title'\nimport AgeChart from './components/AgeChart';\nimport GenderChart from './components/GenderChart';\nimport Map from './components/Map'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Title />\n\n      <div className=\"graph\">\n        <Map />\n        <AgeChart/>\n        <GenderChart/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}