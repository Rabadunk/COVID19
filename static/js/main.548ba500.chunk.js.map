{"version":3,"sources":["img/Title.png","components/title/Title.js","components/map/Map.js","components/info/InfoCard.js","components/info/Info.js","components/summary/Summary.js","components/stats/LocationCases.js","components/stats/DateCases.js","components/stats/StatsSummary.js","components/stats/BarChart.js","components/stats/Custom.js","components/stats/Stats.js","Firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","className","src","TitleImage","alt","Map","locations","show","defaultView","latitude","longitude","width","height","zoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","useState","viewport","setViewport","mapRef","useRef","points","map","place","type","properties","cluser","placeId","DHB","count","Total","geometry","coordinates","Longitude","Latitude","bounds","current","getMap","getBounds","toArray","flat","useSupercluster","options","radius","maxZoom","clusters","supercluster","mapboxApiAccessToken","process","onViewportChange","minZoom","ref","href","Button","variant","download","onClick","cluster","sum","getLeaves","id","forEach","point","getClusterSum","dimension","length","key","offsetLeft","offsetTop","style","expansionZoom","Math","min","getClusterExpansionZoom","InfoCard","cases","location","total","open","setOpen","Card","aria-controls","aria-expanded","Collapse","in","info","Sex","Age","Case","Info","Summary","totals","Confirmed","Probable","end","Recovered","LocationCases","labels","data","console","log","chartData","datasets","label","backgroundColor","title","display","text","legend","responsive","maintainAspectRatio","DateCases","dates","date","Date","Sum","StatsSummary","AlertDays","Hospitalised","FirstCase","Dead","FirstCaseChina","BarChart","props","state","this","Form","Check","React","Component","Custom","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","Item","Link","eventKey","Content","Pane","Stats","Tabs","disabled","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Locations","Cases","Totals","Dates","visible","Firebase","database","once","then","value","setState","val","delay","bind","onClose","hide","animation","duration","customMaskStyles","measure","Spinner","size","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.548ba500.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Title.23336c2c.png\";","import React from 'react'\nimport TitleImage from '../../img/Title.png';\nimport './Title.css'\n\nfunction Title () {\n  return (\n    <div className='Title'>\n      <h1>\n        <img src={TitleImage} alt=\"COVID-19 VISUALISER\"/>\n      </h1>\n    </div>\n  )\n}\n\nexport default Title\n","import React, {useState, useRef} from \"react\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport './Map.css';\n\n\nimport { MdZoomOutMap } from \"react-icons/md\";\nimport { FaGithub, FaFileDownload} from \"react-icons/fa\";\nimport { GoGraph } from \"react-icons/go\";\nimport { Button } from \"react-bootstrap\";\nimport useSupercluster from \"use-supercluster\";\n\n\nexport default function Map({locations, show}) {\n    const defaultView = {\n        latitude: -41.51128245580759,\n        longitude: 172.72407079826075,\n        width: '100%',\n        height: '100%',\n        zoom: 4.418,\n        transitionInterpolator: new FlyToInterpolator({\n            speed: 1\n        }),\n        transitionDuration: \"auto\"     \n    }\n\n    const [viewport, setViewport] = useState(defaultView);\n\n    const mapRef = useRef()\n\n\n    // Clustering\n    // Format for clusters\n    const points = locations.map( place => ({\n        type: \"Feature\",\n        properties: {\n            cluser: false,\n            placeId: place.DHB,\n            count: place.Total\n        },\n        geometry: {\n            type: \"Point\",\n            coordinates: [place.Longitude, place.Latitude]\n        }\n    }));\n\n    // Get map bounds\n    const bounds= mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null;\n\n    // Get clusters\n    const {clusters, supercluster} = useSupercluster({\n        points,\n        zoom: viewport.zoom,\n        bounds,\n        options: { radius: 30, maxZoom: 12}\n    })\n\n    // Method to get sum of clusters\n    const getClusterSum = (cluster) => {\n\n        let sum = 0;\n        \n        supercluster.getLeaves(cluster.id).forEach(point => {\n\n            sum += point.properties.count;\n        })\n\n        return sum;\n\n    }\n\n    return (\n    // Set a height on the map so it will display\n        <ReactMapGL {...viewport} mapboxApiAccessToken={process.env.REACT_APP_MAP_KEY}\n        onViewportChange={ viewport => { setViewport(viewport)}}\n        maxZoom={12}\n        minZoom={4}\n        ref={mapRef}>\n\n\n            <div className=\"Actions\">\n\n                <a href=\"https://github.com/Rabadunk/COVID19\"><Button variant=\"warning\" ><FaGithub/> github</Button></a>\n                <a href=\"./data/cases.json\" download><Button variant=\"warning\"><FaFileDownload /> json</Button></a>\n                <Button variant=\"warning\" onClick ={() => show()}><GoGraph /> stats</Button>\n                <Button variant=\"warning\" onClick={ () => { setViewport(defaultView)} }> <MdZoomOutMap/> center</Button>\n\n            </div>\n\n            {\n                clusters.map(cluster => {\n                    \n                    const [longitude, latitude] = cluster.geometry.coordinates;\n                    const {cluster: isCluster} = cluster.properties;\n\n                    if(isCluster) {\n\n                        let sum = getClusterSum(cluster);\n                        let dimension = 30 + (sum / points.length)\n\n                        return(\n                            <Marker key={cluster.id} latitude={latitude} longitude={longitude} offsetLeft={-1*dimension/2} offsetTop={-1*dimension/2}>\n                                <Button variant=\"warning\" className=\"Case-Marker\" \n                                style={{width: `${dimension}px`, height: `${dimension}px`}}\n                                onClick={ () => {\n                                    const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 12);\n                                    setViewport({\n                                        ...viewport,\n                                        latitude,\n                                        longitude,\n                                        zoom: expansionZoom,\n                                        transitionInterpolator: new FlyToInterpolator({\n                                            speed: 1\n                                        }),\n                                        transitionDuration: \"auto\"\n                                    })\n                                }}>{sum}</Button>\n                            </Marker>\n                        );\n                    }\n\n                    let dimension = 30 + 2 *  (cluster.properties.count / points.length)\n\n                    return(\n                        <Marker key={cluster.properties.placeId} latitude={latitude} longitude={longitude} offsetLeft={-1*dimension/2} offsetTop={-1*dimension/2}>\n                            <Button variant=\"warning\" className=\"Case-Marker\"\n                                    style={{width: `${dimension}px`, height: `${dimension}px`}}\n                                    onClick={ () => {\n                                        setViewport({\n                                            ...viewport,\n                                            latitude,\n                                            longitude,\n                                            zoom: 12,\n                                            transitionInterpolator: new FlyToInterpolator({\n                                                speed: 1\n                                            }),\n                                            transitionDuration: \"auto\"\n                                        })\n                                    }}>{cluster.properties.count}</Button>\n                        </Marker>\n                    )\n                })\n            }\n\n        </ReactMapGL>\n    );\n}\n","import React, {useState} from 'react';\nimport { Card, Collapse, Button } from \"react-bootstrap\";\nimport { FaUserInjured } from \"react-icons/fa\";\nimport './InfoCard.css';\n\nlet InfoCard = ({cases, location, total}) => {\n    const [open, setOpen] = useState(false);\n\n    return (\n      <div>\n            <Card\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                className=\"Location-Card\"\n            >\n                {location}\n\n                <Button variant=\"warning\" className=\"Case-Button\">\n                    <FaUserInjured/> {total}\n                </Button>\n\n            </Card>\n            <Collapse in={open}>\n                <div id=\"example-collapse-text\" className=\"Location-Info\">\n                {\n                    cases.map(info => {\n\n                        if(info.DHB === location) {\n\n                            return (\n                                <div className=\"Piece-Of-Info\">\n                                    <p>{info.Sex} {info.Sex === \"Unavailable\" ? \"\" : \"aged \" + info.Age } <Button variant=\"warning\" className=\"Button-Wrappers\"># {info.Case}</Button></p>\n                                    <p className=\"Details\">{info[\"International travel\"] == \"Yes\" ? \n                                                            info[\"Last country before return\"] == \"N/A\" ? \"International transfer\" : \"Arrived to New Zealand from \" + info[\"Last country before return\"] : \n                                                            info[\"International travel\"] == \"No\" ? \"Community transfer\" : \"Details unclear\"}</p>\n                                </div>\n\n                            )\n\n                        }\n                    })\n                }\n                </div>\n            </Collapse>\n      </div>\n    );\n  }\n  \n  export default InfoCard;","import React from 'react';\nimport InfoCard from './InfoCard'\n\nfunction Info({cases, locations}) {\n\n    return (\n      <div className=\"Info-Cards\">\n          {\n            locations.map(location => (\n                <InfoCard cases={cases} location={location.DHB} total={location.Total}/>\n            ))\n          }\n      </div>\n    );\n  }\n  \n  export default Info;","import React from 'react'\nimport CountUp from 'react-countup';\n\n\nimport './Summary.css'\n\nfunction Summary ({totals}) {\n  return (\n    <div className='Summary'>\n\n        <div className=\"Totals\">\n            <h4>Confirmed: {totals.Confirmed}</h4>\n            <h4>Probable: {totals.Probable}</h4>\n            <h4>Total: <CountUp end={totals.Total} /></h4>\n            <h4 className=\"Recovered\"> Recovered: {totals.Recovered}</h4>\n        </div>\n\n        <div className=\"Profile\">\n            <p>This is not an official government website. Data for this website is sourced from <a href=\"https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases\">here</a>. For more information, view the official government website: <a href=\"https://covid19.govt.nz/\">https://covid19.govt.nz/</a>.</p>\n        </div>\n\n    </div>\n  )\n}\n\nexport default Summary\n","import React from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nlet LocationCases = ({locations}) => {\n\n  let labels = locations.map(place => {return place.DHB})\n  let data = locations.map(place => {return place.Total})\n\n  console.log(labels, data);\n\n  let chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Cases\",\n        data: data,\n        backgroundColor: \"rgba(253, 219, 83, 0.8)\"\n      }\n    ]\n  }\n\n  let options = {\n    title: {\n      display: true,\n      text: 'Total cases per DHB'\n    },\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: true\n  }\n\n\n  return (\n    <div>\n      <Card className=\"Card \">\n          <div className=\"Chart\">\n            <HorizontalBar data={chartData} options={options}/>\n          </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default LocationCases","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nlet DateCases = ({dates}) => {\n\n  let labels = dates.map(date => {return date.Date})\n  let data = dates.map(date => {return date.Sum})\n\n  console.log(labels, data);\n\n  let chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Cases\",\n        data: data,\n        backgroundColor: \"rgba(253, 219, 83, 0.8)\"\n      }\n    ]\n  }\n\n  let options = {\n    title: {\n      display: true,\n      text: 'Total cases by date'\n    },\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: true,\n  }\n\n\n  return (\n    <div>\n      <Card className=\"Card ChartCard\">\n          <div className=\"Chart\">\n            <Line data={chartData} options={options}/>\n          </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default DateCases","import React from 'react';\nimport { Card} from 'react-bootstrap';\nimport { IoIosNuclear } from \"react-icons/io\";\nimport { FaUserInjured, FaSearch, FaHeartbeat, FaHospital, FaSkullCrossbones, FaCalendarDay} from \"react-icons/fa\";\n\n\nlet StatsSummary = ({totals}) => {\n\n  return (\n    <div className=\"StatSummary\">\n        \n        <h1>New Zealand is currently at <span>Alert Level 4</span></h1>\n        <Card className=\"Card\">\n            <table>\n                <tr>\n                    <td><span><IoIosNuclear/>{totals.Confirmed}</span> confirmed cases</td>\n                    <td><span><FaHeartbeat/>{totals.Recovered}</span> people have recovered</td>\n                    <td><span><FaCalendarDay/>{totals.AlertDays}</span> days at alert level 4</td>\n                </tr>\n                <tr>\n                    <td><span><FaSearch/>{totals.Probable}</span> probable cases</td>\n                    <td><span><FaHospital/>{totals.Hospitalised}</span> people are hospitalised</td>\n                    <td><span><FaCalendarDay/>{totals.FirstCase}</span> days since first NZ case</td>\n                </tr>\n                <tr>\n                    <td><span><FaUserInjured/>{totals.Total}</span> cases in total</td>\n                    <td><span><FaSkullCrossbones/>{totals.Dead}</span> person has passed away</td>\n                    <td><span><FaCalendarDay/>{totals.FirstCaseChina}</span> days since first ever case</td>\n                </tr>\n            </table>\n        </Card>\n    </div>\n  )\n}\n\nexport default StatsSummary","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {Form} from 'react-bootstrap';\n\nclass BarChart extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chartData: null,\n\n        }\n\n        this.labels = this.props.dates.map(date => {return date.Date})\n        this.data = this.props.dates.map(date => {return date.Sum})\n      \n        this.chartData = {\n          labels: this.labels,\n          datasets: [\n            {\n              label: \"Cases\",\n              data: this.data,\n              backgroundColor: \"rgba(253, 219, 83, 0.8)\"\n            }\n          ]\n        }\n      \n        this.options = {\n          responsive: true,\n          maintainAspectRatio: true,\n        }\n    }\n\n\n  render() {\n    return (\n        <div>\n            <div className=\"Chart\">\n                <Bar data={this.chartData} options={this.options}/>\n                <Form>\n\n                    <div key='default-checkbox' className=\"mb-3\">\n                        <Form.Check \n                            type='checkbox'\n                            id='default-checkbox'\n                            label='dates'\n                        />\n\n                        <Form.Check\n                            type='checkbox' \n                            label='default-checkbox' \n                            id='default-checkbox' \n                        />\n                    </div>\n\n                </Form>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default BarChart","import React from 'react';\nimport './Graphs.css';\nimport { Row, Col, Nav, Tab, Card} from \"react-bootstrap\";\nimport BarChart from \"./BarChart\";\nimport { Bar } from 'react-chartjs-2';\n\nlet Custom = ({locations, totals, dates}) => {\n\n  return (\n    <div className=\"Custom\">\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n\n            <Col className=\"CustomColumn\" sm={3}>\n              <Card className=\"CardNav\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"first\">Bar</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"second\">Line</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"third\">Pie</Nav.Link>\n                </Nav.Item>\n              </Nav>\n              </Card>\n            </Col>\n\n            <Col className=\"CustomColumn\" sm={9}>\n            <Card className=\"Card\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"first\">\n                  <BarChart dates={dates}/>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"second\">\n                  hello\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"third\">\n                  hello\n                </Tab.Pane>\n              </Tab.Content>\n              </Card>\n            </Col>\n\n          </Row>\n        </Tab.Container>\n    </div>\n  )\n}\n\nexport default Custom","import React from 'react';\nimport './Graphs.css';\nimport { Tabs, Tab} from \"react-bootstrap\";\nimport LocationCases from './LocationCases';\nimport DateCases from './DateCases';\nimport StatsSummary from './StatsSummary';\nimport Custom from './Custom';\n\nlet Stats = ({locations, totals, dates}) => {\n\n  return (\n    <div className=\"Stats\">\n      <Tabs defaultActiveKey=\"stats\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"stats\" title=\"Stats\" className=\"Tab\">\n          <StatsSummary totals={totals} />\n          <DateCases dates={dates} />\n          <LocationCases locations={locations}/>\n        </Tab>\n        <Tab eventKey=\"custom\" title=\"Custom\" disabled>\n          <Custom locations={locations} totals={totals} dates={dates}/>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Stats","import firebase from 'firebase'\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport Rodal from 'rodal';\nimport Title from './components/title/Title'\nimport Map from './components/map/Map'\nimport Info from './components/info/Info'\nimport Summary from './components/summary/Summary'\nimport Stats from './components/stats/Stats'\nimport Firebase from './Firebase'\n\nimport 'rodal/lib/rodal.css';\nimport './App.css';\nimport { Spinner } from 'react-bootstrap';\nimport FadeIn from 'react-fade-in';\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      Locations: null,\n      Cases: null,\n      Totals: null,\n      Dates: null,\n      visible: false\n    }\n\n  }\n\n  componentDidMount() {\n    const locationsRef = Firebase.database().ref(\"Locations\");\n    locationsRef.once('value').then(value => {\n      this.setState({Locations: value.val()})\n    })\n\n    const casesRef = Firebase.database().ref(\"Cases\");\n    casesRef.once('value').then(value => {\n      this.setState({Cases: value.val()})\n    })\n\n    const totalsRef = Firebase.database().ref(\"Totals\");\n    totalsRef.once('value').then(value => {\n      this.setState({Totals: value.val()[0]})\n    })\n\n    const datesRef = Firebase.database().ref(\"Dates\");\n    datesRef.once('value').then(value => {\n      this.setState({Dates: value.val()})\n    })\n\n  }\n\n  show() {\n    this.setState({ visible: true });\n  }\n\n  hide() {\n      this.setState({ visible: false });\n  }\n\n  render(){\n    let oath = this.state.Locations != null ? this.state.Cases != null ? this.state.Totals != null ? this.state.Dates != null ? true : false : false : false : false;\n    let display = oath ?\n    <FadeIn delay={300}>\n      <div className=\"Map\">\n        <Map locations={this.state.Locations} show={this.show.bind(this)}/>\n      </div>\n      <div className=\"Info\">\n        <div className=\"Info-Profile\">\n          <Title />\n          <Summary totals={this.state.Totals}/>\n        </div>\n        <Info cases={this.state.Cases} locations={this.state.Locations}/>\n      </div>\n\n\n      <Rodal visible={this.state.visible} \n      onClose={this.hide.bind(this)} \n      animation=\"slideDown\" duration={1000}\n      customMaskStyles={{backgroundColor:'rgba(0, 0, 0, 0.6)'}}\n      width={70}\n      height={80}\n      measure=\"%\">\n        <Stats locations={this.state.Locations} totals={this.state.Totals} dates={this.state.Dates}/>\n      </Rodal> \n    </FadeIn> : <Spinner animation=\"border\" variant=\"warning\" className=\"Loading\" size=\"bg\"/>\n\n    return (\n      <div className=\"App\">\n        {display}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}